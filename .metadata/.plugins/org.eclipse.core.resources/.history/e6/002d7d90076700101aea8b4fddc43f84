package com.aurionpro.test;

import com.aurionpro.behavior.*;
import com.aurionpro.model.*;
import java.util.Scanner;

public class EnhancedGuitarSimulator {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("----- Welcome to the Enhanced Guitar Simulator -----");

		while (true) {
			System.out.println("\nSelect Mode:");
			System.out.println("1. Customer Mode (Build and Play a Guitar)");
			System.out.println("2. Owner Mode (View Available Components)");
			System.out.println("3. Exit");
			System.out.print("Enter choice: ");
			String mode = sc.nextLine();

			switch (mode) {
			case "1":
				customerMode(sc);
				break;
			case "2":
				ownerMode();
				break;
			case "3":
				System.out.println("\nThank you for using the simulator. Goodbye! ðŸ‘‹");
				sc.close();
				return;
			default:
				System.out.println("Invalid choice. Please enter 1, 2, or 3.");
			}
		}
	}

	private static void ownerMode() {
		System.out.println("\n--- Owner/Developer Dashboard ---");
		System.out.println("This shows all the building blocks currently in the system.");

		System.out.println("\nAvailable Guitar Models:");
		System.out.println("  - Fender Stratocaster (Electric)");
		System.out.println("  - Fender Telecaster (Electric)"); // <-- Newly added
		System.out.println("  - Gibson Les Paul (Electric)");
		System.out.println("  - PRS Custom 24 (Electric)"); // <-- Newly added
		System.out.println("  - Martin D-28 (Acoustic)");
		System.out.println("  - Taylor 814ce (Acoustic)");
		System.out.println("  - Gibson J-45 (Acoustic)"); // <-- Newly added
		System.out.println("  - Guild 12-String (Acoustic)"); // <-- Newly added

		System.out.println("\nAvailable Play Behaviors:");
		System.out.println("  - Play With Pick");
		System.out.println("  - Play With Fingers");
		System.out.println("  - Play With Slap");
		System.out.println("  - Play With Tapping");

		System.out.println("\nAvailable Tuning Behaviors:");
		System.out.println("  - Standard Tuning (EADGBE)");
		System.out.println("  - Drop D Tuning (DADGBE)");
		System.out.println("  - Open G Tuning (D-G-D-G-B-D)");
		System.out.println("  - Half-Step Down Tuning (Eb-Ab-Db-Gb-Bb-Eb)");
		System.out.println("---------------------------------");
	}

	private static void customerMode(Scanner sc) {
		String choice = "yes";
		while (choice.equalsIgnoreCase("yes")) {
			Guitar guitar = selectGuitar(sc);
			if (guitar == null)
				continue;

			configureAndPlayGuitar(sc, guitar);

			System.out.print("\nDo you want to build another guitar? (yes/no): ");
			choice = sc.nextLine().trim().toLowerCase();
			while (!choice.equals("yes") && !choice.equals("no")) {
				System.out.print("Invalid input! Please enter yes or no: ");
				choice = sc.nextLine().trim().toLowerCase();
			}
		}
	}

	private static Guitar selectGuitar(Scanner sc) {
		System.out.println("\nStep 1: Choose Guitar Type");
		System.out.println("1. Electric");
		System.out.println("2. Acoustic");
		System.out.print("Enter choice: ");
		String type = sc.nextLine();

		switch (type) {
		case "1":
			System.out.println("\nChoose Electric Guitar Model:");
			System.out.println("1. Fender Stratocaster");
			System.out.println("2. Gibson Les Paul");
			System.out.println("3. Fender Telecaster"); // <-- Newly added
			System.out.println("4. PRS Custom 24"); // <-- Newly added
			System.out.print("Enter choice: ");
			String electricModel = sc.nextLine();
			switch (electricModel) {
			case "1":
				return new FenderStratocaster();
			case "2":
				return new GibsonLesPaul();
			case "3":
				return new FenderTelecaster(); // <-- Newly added
			case "4":
				return new PRS_Custom24(); // <-- Newly added
			}
			break;
		case "2":
			System.out.println("\nChoose Acoustic Guitar Model:");
			System.out.println("1. Martin D-28");
			System.out.println("2. Taylor 814ce");
			System.out.println("3. Gibson J-45"); // <-- Newly added
			System.out.println("4. Guild 12-String"); // <-- Newly added
			System.out.print("Enter choice: ");
			String acousticModel = sc.nextLine();
			switch (acousticModel) {
			case "1":
				return new MartinD28();
			case "2":
				return new Taylor814ce();
			case "3":
				return new GibsonJ45(); // <-- Newly added
			case "4":
				return new Guild12String(); // <-- Newly added
			}
			break;
		}
		System.out.println("Invalid selection. Please try again.");
		return null;
	}

	private static void configureAndPlayGuitar(Scanner sc, Guitar guitar) {
		// Step 2: Configure Play Style
		System.out.println("\nStep 2: Choose How to Play");
		System.out.println("1. With Fingers");
		System.out.println("2. With a Pick");
		System.out.println("3. Slapping");
		System.out.println("4. Tapping");
		System.out.print("Enter choice: ");
		String playStyle = sc.nextLine();

		switch (playStyle) {
		case "1":
			guitar.setPlayBehavior(new PlayWithFingers());
			break;
		case "2":
			guitar.setPlayBehavior(new PlayWithPick());
			break;
		case "3":
			guitar.setPlayBehavior(new PlayWithSlap());
			break;
		case "4":
			guitar.setPlayBehavior(new PlayWithTapping());
			break;
		default:
			System.out.println("Invalid choice, defaulting to playing with a pick.");
			guitar.setPlayBehavior(new PlayWithPick());
			break;
		}

		// Step 3: Configure Tuning
		System.out.println("\nStep 3: Choose Your Tuning");
		System.out.println("1. Standard Tuning (EADGBE)");
		System.out.println("2. Drop D Tuning (DADGBE)");
		System.out.println("3. Open G Tuning");
		System.out.println("4. Half-Step Down Tuning");
		System.out.print("Enter choice: ");
		String tuneStyle = sc.nextLine();

		switch (tuneStyle) {
		case "1":
			guitar.setTuneBehavior(new StandardTune());
			break;
		case "2":
			guitar.setTuneBehavior(new DropDTune());
			break;
		case "3":
			guitar.setTuneBehavior(new OpenGTune());
			break;
		case "4":
			guitar.setTuneBehavior(new HalfStepDownTune());
			break;
		default:
			System.out.println("Invalid choice, defaulting to Standard Tuning.");
			guitar.setTuneBehavior(new StandardTune());
			break;
		}

		// Final Step: Let's Rock!
		System.out.println("\n------ Your Custom Guitar is Ready! ------");
		guitar.display();
		System.out.println("\nNow, let's see it in action:");
		guitar.performTune();
		guitar.performPlay();
		guitar.clean();
		System.out.println("------------------------------------------");
	}
}
